(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{412:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么要采用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要采用缓存"}},[t._v("#")]),t._v(" 为什么要采用缓存")]),t._v(" "),a("p",[t._v("在任何一个前端项目中，访问服务器获取数据都是很常见的事情，但是如果相同数据被重复请求了不止一次，那么多余的请求次数必然会浪费网络带宽，以及延迟浏览器渲染所要处理的内容，从而影响用户的体验。因此考虑使用缓存技术对以获取的资源进行重用，是一种提升网站性能与用户体验的有效策略")]),t._v(" "),a("h2",{attrs:{id:"缓存的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的原理"}},[t._v("#")]),t._v(" 缓存的原理")]),t._v(" "),a("p",[t._v("缓存的原理是在⾸次请求后保存⼀份请求资源的响应副本，当⽤户再次发起相同请求后，如果判断缓存命 中则拦截请求，将之前存储的响应副本返回给⽤户，从⽽避免重新向服务器发起资源请求。")]),t._v(" "),a("h2",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),a("p",[t._v("HTTP 缓存是前端开发中最常接触的缓存机制，可以分为"),a("code",[t._v("强制缓存")]),t._v("与"),a("code",[t._v("协商缓存")]),t._v("，⼆者最⼤ 的区别在于判断缓存命中时，浏览器是否需要向服务器端进⾏询问以协商缓存的相关信息，进⽽判断是否需要就响应内容进⾏重新请求。")]),t._v(" "),a("h3",{attrs:{id:"强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 强制缓存")]),t._v(" "),a("p",[t._v("对于强制缓存⽽⾔，如果浏览器判断所请求的⽬标资源有效命中，则可直接从强制缓存中返回请求响应， ⽆须与服务器进⾏任何通信。强制缓存有效，返回的是 200")]),t._v(" "),a("h4",{attrs:{id:"expires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" "),a("code",[t._v("expires")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("expires")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" Fed "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[a("code",[t._v("expires")]),t._v(" 是在 HTTP 1.0 协议中 声明的⽤来控制缓存失效⽇期时间戳的字段，它由服务器端指定后通过响应头告知浏览器，浏览器在接收到带有该字段的响应体后进⾏缓存。若之后浏览器再次发起相同的资源请求，便会对⽐ "),a("code",[t._v("expires")]),t._v(" 与本地当前的时间戳，如果当前请求的本地时间戳⼩于"),a("code",[t._v("expires")]),t._v(" 的值，则说明浏览器缓存的响应还未过期，可以直接使⽤⽽⽆须向服务器端再次发起请求。只有当本地时间戳⼤于 "),a("code",[t._v("expires")]),t._v(" 值发⽣缓存过期时，才允许重新向服务器发起请求。")]),t._v(" "),a("ul",[a("li",[t._v("不足：如果客户端本地的时间与服务器端的时间不同步，或者对客户端时间进⾏主动修改，那么对于缓存过期的判断可能就⽆法和预期相符。\n因此从 HTTP 1.1 协议开始新增了 "),a("code",[t._v("cache-control")]),t._v(" 字段来对 "),a("code",[t._v("expires")]),t._v(" 的功能进⾏扩展和完善。")])]),t._v(" "),a("h4",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" "),a("code",[t._v("cache-control")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31536000")]),t._v("\n")])])]),a("p",[t._v("设置了 "),a("code",[t._v("maxage=31536000")]),t._v(" 的属性值来控制响应资源的有效期，它是⼀个以秒为单位的时间⻓度，表示该资源在被请求到后的 "),a("code",[t._v("31536000")]),t._v(" 秒内有效，如此便可避免服务器端和客户端时间戳不同步⽽造成的问题。\n除此之外， "),a("code",[t._v("cache-control")]),t._v(" 还可配置⼀些其他属性值来更准确地控制缓存，下⾯来具体介绍：")]),t._v(" "),a("p",[a("code",[t._v("no-cache")]),t._v("(或"),a("code",[t._v("max-age=0")]),t._v("):跳转强制缓存，直接与服务端进行协商缓存")]),t._v(" "),a("p",[a("code",[t._v("no-store")]),t._v(":完全不采用缓存，每次都要服务端给予全新的响应")]),t._v(" "),a("p",[a("code",[t._v("private")]),t._v(":只能被浏览器缓存，默认就是 "),a("code",[t._v("private")])]),t._v(" "),a("p",[a("code",[t._v("public")]),t._v(":可以被浏览器或代理服务器缓存")]),t._v(" "),a("p",[a("code",[t._v("max-age")]),t._v(":浏览器缓存的时长(单位秒)")]),t._v(" "),a("p",[a("code",[t._v("s-maxage")]),t._v(":代理服务器缓存的时长(单位秒)，且仅当设置了 "),a("code",[t._v("public")]),t._v(" 属性值时才有效")]),t._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("协商缓存就是在使⽤本地缓存之前，需要向服务器端发起⼀次 GET 请求，与之协商当前浏览器 保存的本地缓存是否已经过期。\n协商缓存有效时，返回的响应状态为 "),a("code",[t._v("304 not modified")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协商缓存有效的响应头")]),t._v("\nStatus Code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v(" Not Modified\n")])])]),a("p",[t._v("响应头里，必须带上 "),a("code",[t._v("cache-control: no-cache")]),t._v("强制不采用缓存，每次都需要服务器给出响应")]),t._v(" "),a("h4",{attrs:{id:"last-modified-与-if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-与-if-modified-since"}},[t._v("#")]),t._v(" "),a("code",[t._v("last-modified 与 if-modified-since")])]),t._v(" "),a("p",[t._v("last-modified 与 if-modified-since 是 HTTP 1.0 的产物")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Thu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" Apr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" \ncache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cache\n")])])]),a("p",[t._v("如上要记得响应头了除了 "),a("code",[t._v("last-modified")]),t._v("，还要设置 "),a("code",[t._v("cache-control: no-cache")]),t._v("，告诉浏览器要使用协商缓存。")]),t._v(" "),a("p",[t._v("为了便于理解，举个例子：")]),t._v(" "),a("p",[t._v("客户端要向服务器请求一张 03.jpg 图片，为了让该资源被再次请求时能通过协商缓存的机制使用本地缓存，而不用每次都返回该图片，那么需要实现如下功能：")]),t._v(" "),a("ul",[a("li",[t._v("首次访问该图片时，在响应头中应包含 "),a("code",[t._v("last-modified")]),t._v(" 字段，该字段的值为该图片最近一次修改的时间戳，并且要带上 "),a("code",[t._v("Cache-Control")]),t._v(" ，值为 "),a("code",[t._v("no-cache")]),t._v("，表示采用协商缓存")]),t._v(" "),a("li",[t._v("再次请求时，客户端会向服务端发送一次 GET 请求，进行缓存有效性的协商，请求头中会带上 "),a("code",[t._v("if-modified-since")]),t._v(" 字段，字段值为上次响应头里的 "),a("code",[t._v("last-modified")]),t._v(" 的字段值。")]),t._v(" "),a("li",[t._v("服务器收到该请求后，会获取头部里的 "),a("code",[t._v("if-modified-since")]),t._v(" ，并将该字段值与图片当前的修改时间戳进行对比，如果相同则说明缓存未过期，可继续使用本地缓存，返回状态码 "),a("code",[t._v("304")]),t._v("，否则服务器重新返回新的图片资源。")])]),t._v(" "),a("p",[t._v("采用 node 编码如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mtime "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./img/03.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ifModifiedSince "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-modified-since'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ifModifiedSince "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" mtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存生效")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./img/03.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'last-modified'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("不足：")])]),t._v(" "),a("ul",[a("li",[t._v("是根据资源最后的修改时间戳进⾏判断的，所以就算只是对文件进行了编辑(比如文件重命名之后再改回来)，但内容并没有发生改变，修改时间也会更新，导致协商缓存失效。")]),t._v(" "),a("li",[t._v("标识文件资源修改的时间戳单位为秒，这样如果修改的速度过快，在毫秒之内改了内容，无法识别出来。")])]),t._v(" "),a("h4",{attrs:{id:"etag-与-if-none-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag-与-if-none-match"}},[t._v("#")]),t._v(" etag 与 if-none-match")]),t._v(" "),a("p",[t._v("为了弥补通过时间戳判断的不⾜，从 "),a("strong",[t._v("HTTP 1.1")]),t._v(" 规范开始新增了⼀个 "),a("code",[t._v("ETag")]),t._v(" 的头信息。\n是服务器为不同资源进⾏哈希运算所⽣成的⼀个字符串，该字符串类似于⽂件指纹，只要⽂件内容编码存在差异，对应的 "),a("code",[t._v("ETag")]),t._v(" 标签值就会不同，因此可以使⽤ "),a("code",[t._v("ETag")]),t._v(" 对⽂件资源进⾏更精准的变化感知。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cache\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("etag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12274-tEuUYy8halvEHeM+olO/cV8mQ8A"')]),t._v("\n")])])]),a("p",[t._v("为了便于理解，举个例子：")]),t._v(" "),a("p",[t._v("客户端要向服务器请求一张 04.jpg 图片，为了让该资源被再次请求时能通过协商缓存的机制使用本地缓存，而不用每次都返回该图片，那么需要实现如下功能：")]),t._v(" "),a("ul",[a("li",[t._v("首次访问该图片时，在响应头中应包含 "),a("code",[t._v("etag")]),t._v(" 字段，该字段的值为该图片最近一次的文件标识，并且要带上 "),a("code",[t._v("Cache-Control")]),t._v(" ，值为 "),a("code",[t._v("no-cache")]),t._v("，表示采用协商缓存")]),t._v(" "),a("li",[t._v("再次请求时，客户端会向服务端发送一次 "),a("code",[t._v("GET")]),t._v(" 请求，进行缓存有效性的协商，请求头中会带上 "),a("code",[t._v("if-none-match")]),t._v(" 字段，字段值为上次响应头里的 etag 的字段值。")]),t._v(" "),a("li",[t._v("服务器收到该请求后，会获取头部里的 "),a("code",[t._v("if-none-match")]),t._v(" ，并将该字段值与图片当前的文件标识进行对比，如果相同则说明缓存未过期，可继续使用本地缓存，返回状态码 "),a("code",[t._v("304")]),t._v("，否则服务器重新返回新的图片资源。")])]),t._v(" "),a("p",[t._v("采用 node 编码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./img/04.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" etagContent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("etag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ifNoneMatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-none-match'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ifNoneMatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" etagContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'etag'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" etagContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("跟 "),a("code",[t._v("last-modified")]),t._v(" 共同存在时，"),a("code",[t._v("etag")]),t._v(" 优先级更高")]),t._v(" "),a("p",[a("code",[t._v("不足：")])]),t._v(" "),a("ul",[a("li",[t._v("生成文件资源的 "),a("code",[t._v("etag")]),t._v(" 需要付出额外的开销，但文件内容过大时，会影响服务器的性能")]),t._v(" "),a("li",[a("code",[t._v("etag")]),t._v(" 字段值的生成分为强验证和弱验证，强验证能够保证每个字节都相同，但速度慢；而弱验证只对部分属性值生成，速度快但无法保证每个字节都相同")]),t._v(" "),a("li")]),t._v(" "),a("p",[t._v("所以 "),a("code",[t._v("etag")]),t._v(" 只是对于 "),a("code",[t._v("last-modified")]),t._v(" 的一个补充，并不是替换")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e42e7495dc2457fa235221cebae6364~tplv-k3u1fbpfcp-watermark.awebp"}})]),t._v(" "),a("ul",[a("li",[t._v("⾸先根据资源内容的属性判断是否需要使⽤缓存，如果不希望对该资源开启缓存（⽐如涉及⽤户的⼀些敏感信息），则可直接设置 cache-control 的属性值为 no-store 来禁⽌任何缓存策略，这样请求和响应的信息就都不会被存储在对⽅及中间代理的磁盘系统上。")]),t._v(" "),a("li",[t._v("如果希望使⽤缓存，那么接下来就需要确定对缓存有效性的判断是否要与服务器进⾏协商，若需要与服务器协商则可为 cache-control 字段增加 no-cache 属性值，来强制启⽤协商缓存。")]),t._v(" "),a("li",[t._v("否则接下来考虑是否允许中间代理服务器缓存该资源，可通过为 cache-control 字段添加 private 或 public 来进⾏控制")]),t._v(" "),a("li",[t._v("如果之前未设置 no-cache 启⽤协商缓存，那么接下来可设置强制缓存的过期时间，即为 cache-control 字段配置 max-age=… 的属 性值")]),t._v(" "),a("li",[t._v("最后如果启⽤了协商缓存，则可进⼀步设置请求资源的 last-modified 和 ETag 实体标签等参 数")])]),t._v(" "),a("h2",{attrs:{id:"缓存设置注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存设置注意事项"}},[t._v("#")]),t._v(" 缓存设置注意事项")]),t._v(" "),a("ul",[a("li",[t._v("拆分源码，分包加载，这样内容更改，仅需拉取发生修改的模块代码包，如果是采用 "),a("code",[t._v("webpack")]),t._v("，可以使用 "),a("code",[t._v("splitChunks")]),t._v(" 进行分块打包，或者使用动态加载，比如 "),a("code",[t._v("import()")]),t._v(" 函数")]),t._v(" "),a("li",[t._v("预估资源的缓存时效，根据文件内容，设置不同的缓存过期时间")]),t._v(" "),a("li",[t._v("控制中间代理的缓存，涉及用户隐私的不要采取中间代理")]),t._v(" "),a("li",[t._v("避免网址的冗余，相同资源采用同一个网址")]),t._v(" "),a("li",[t._v("规划缓存的层次结构")])]),t._v(" "),a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/4/1731a0a361b2bc83~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp"}})])}),[],!1,null,null,null);a.default=n.exports}}]);