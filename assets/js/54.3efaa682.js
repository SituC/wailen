(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{342:function(t,r,s){"use strict";s.r(r);var e=s(14),a=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"csr-client-side-rendering"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csr-client-side-rendering"}},[t._v("#")]),t._v(" CSR (CLient Side Rendering)")]),t._v(" "),r("p",[t._v("CSR 也就是客户端渲染，需要使用 JavaScript，调用接口（API）来获取数据，这种方式前后端完全分离。")]),t._v(" "),r("h1",{attrs:{id:"ssr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),r("p",[t._v("服务器端渲染。优点是解决 SEO 和白屏问题，缺点是每次渲染都会请求服务器，会给服务器造成压力。")]),t._v(" "),r("h1",{attrs:{id:"ssg"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ssg"}},[t._v("#")]),t._v(" SSG")]),t._v(" "),r("p",[t._v("静态站点生成。在构建时获取数据，生成静态页面，只需要静态部署，适合开发一些数据不易变更的网站，比如开发文档。")]),t._v(" "),r("h1",{attrs:{id:"isr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#isr"}},[t._v("#")]),t._v(" ISR")]),t._v(" "),r("p",[t._v("增量静态再生。它是 SSG 和 SSR 的组合，主要是靠静态服务，但在数据过期时，可以再次从 API 获取数据，并且生成静态页面，最适合常见的资讯类、新闻类网站。")]),t._v(" "),r("h1",{attrs:{id:"server-component"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#server-component"}},[t._v("#")]),t._v(" Server component")]),t._v(" "),r("p",[t._v("也是 SSR 的一种， 但互补了 SSR 的不足，让网页拥有流式渲染的能力。")])])}),[],!1,null,null,null);r.default=a.exports}}]);