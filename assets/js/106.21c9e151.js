(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{400:function(_,o,e){"use strict";e.r(o);var v=e(14),s=Object(v.a)({},(function(){var _=this,o=_._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[o("h2",{attrs:{id:"_1-关键渲染路径"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-关键渲染路径"}},[_._v("#")]),_._v(" 1. 关键渲染路径")]),_._v(" "),o("p",[_._v("指浏览器接受请求来的html、css、js，然后"),o("code",[_._v("解析")]),_._v("，"),o("code",[_._v("构建树")]),_._v("，"),o("code",[_._v("渲染布局")]),_._v("，"),o("code",[_._v("绘制")]),_._v("，最后呈现给用户能看到的界面这个过程")]),_._v(" "),o("p",[_._v("渲染有两个阶段：页面内容加载完成和页面资源加载完成，分别对应"),o("code",[_._v("DOMContentLoaded")]),_._v("和"),o("code",[_._v("Load")])]),_._v(" "),o("ul",[o("li",[o("code",[_._v("DOMContentLoaded")]),_._v(" 事件触发时，仅当DOM加载完成，不包括样式表，图片等")]),_._v(" "),o("li",[o("code",[_._v("Load")]),_._v("事件触发时，页面上所有的DOM，样式表，脚本，图片都已加载完成")])]),_._v(" "),o("h2",{attrs:{id:"_2-浏览器渲染步骤"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器渲染步骤"}},[_._v("#")]),_._v(" 2. 浏览器渲染步骤")]),_._v(" "),o("ol",[o("li",[_._v("浏览器将html解析成"),o("code",[_._v("dom树")])]),_._v(" "),o("li",[_._v("浏览器将css解析成层叠样式表树"),o("code",[_._v("cssom")])]),_._v(" "),o("li",[_._v("浏览器将dom树和cssom树合并成渲染树"),o("code",[_._v("render tree")]),_._v("，代表一系列将要被渲染的对象")]),_._v(" "),o("li",[_._v("渲染树的每个元素包含的内容都是计算过的，它被称为布局"),o("code",[_._v("layout")]),_._v("。浏览器使用一种"),o("code",[_._v("流式处理")]),_._v("的方法，只需要一次绘制操作就可以布局所有的元素。")]),_._v(" "),o("li",[_._v("将渲染树的各个节点绘制到屏幕上，这一步称为绘制"),o("code",[_._v("painting")])])]),_._v(" "),o("blockquote",[o("p",[_._v("以上5个步骤不一定一次性顺序完成，比如DOM或CSSOM被修改时，亦或者是哪个过程会重复执行，这样才能计算出哪些元素需要在屏幕上进行重新渲染，而在实际情况中，js和css的某些操作往往会多次修改dom或cssom")])]),_._v(" "),o("p",[o("img",{attrs:{src:"//upload-images.jianshu.io/upload_images/3534846-00ef9f3d405462ef.png?imageMogr2/auto-orient/strip|imageView2/2/format/webp"}})]),_._v(" "),o("h2",{attrs:{id:"_3-浏览器渲染网页的具体流程"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器渲染网页的具体流程"}},[_._v("#")]),_._v(" 3. 浏览器渲染网页的具体流程")]),_._v(" "),o("h3",{attrs:{id:"_1-构建dom树"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建dom树"}},[_._v("#")]),_._v(" "),o("code",[_._v("1.构建DOM树")])]),_._v(" "),o("p",[_._v("当浏览器接受到服务器相应的html后，会首先遍历文档节点，生成dom树，需要注意以下几点：")]),_._v(" "),o("ul",[o("li",[_._v("dom树在构建过程中可能会被css和js的加载而阻塞")]),_._v(" "),o("li",[o("code",[_._v("display: none")]),_._v("的元素也会在dom树种")]),_._v(" "),o("li",[o("code",[_._v("注释")]),_._v("也会在dom树中")]),_._v(" "),o("li",[o("code",[_._v("script标签")]),_._v("也会在dom树种")])]),_._v(" "),o("p",[_._v("无论是DOM还是CSSOM，都要经过"),o("code",[_._v("Bytes(字节)->characters(字符)->tokens(标记)->nodes(节点)->object model(对象模型)")]),_._v("这个过程\n")]),o("p",[o("img",{attrs:{src:"//upload-images.jianshu.io/upload_images/3534846-770586311bb543d6?imageMogr2/auto-orient/strip|imageView2/2/format/webp"}})]),_._v("\n只有当前节点所有子节点都构建好过后才会构建下一个兄弟节点"),o("p"),_._v(" "),o("h3",{attrs:{id:"_2-构建cssom规则树"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-构建cssom规则树"}},[_._v("#")]),_._v(" "),o("code",[_._v("2.构建CSSOM规则树")])])])}),[],!1,null,null,null);o.default=s.exports}}]);