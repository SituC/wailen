(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{385:function(o,e,a){"use strict";a.r(e);var l=a(14),s=Object(l.a)({},(function(){var o=this,e=o._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("ul",[e("li",[e("code",[o._v("cookie")]),o._v(": cookie会随着每次HTTP请求头信息一起发送，无形中增加了网络流量，另外，cookie能存储的数据容量有限，根据浏览器类型不同而不同，IE6大约只能存储2K。")]),o._v(" "),e("li",[e("code",[o._v("Flash ShareObject")]),o._v(": 这种方式能能解决上面提到的cookie存储的两个弊端，而且能够跨浏览器，应该说是目前最好的本地存储方案。不过，需要在页面中插入一个Flash，当浏览器没有安装Flash控件时就不能用了。所幸的是，没有安装Flash的用户极少。\n缺点：需要安装Flash插件。")]),o._v(" "),e("li",[e("code",[o._v("Google Gear")]),o._v(": Google开发出的一种本地存储技术。\n缺点：需要安装Gear组件。")]),o._v(" "),e("li",[e("code",[o._v("userData")]),o._v(": IE浏览器可以使用userData来存储数据，容量可达到640K，这种方案是很可靠的，不需要安装额外的插件。缺点：它仅在IE下有效。")]),o._v(" "),e("li",[e("code",[o._v("sessionStorage")]),o._v(": 使用于Firefox2+的火狐浏览器，用这种方式存储的数据仅窗口级别有效，同一个窗口（或者Tab）页面刷新或者跳转，都能获取到本地存储的数据，当新开窗口或者页面时，原来的数据就失效了。注意区分"),e("code",[o._v("sessionStroage")]),o._v("和"),e("code",[o._v("session")]),o._v("，后者是在服务端使用的\n缺点：IE不支持、不能实现数据的持久保存。")]),o._v(" "),e("li",[e("code",[o._v("globalStorage")]),o._v(": 使用于Firefox2+的火狐浏览器，类似于IE的userData。缺点：IE不支持。")]),o._v(" "),e("li",[e("code",[o._v("localStorage")]),o._v(": localStorage是Web Storage互联网存储规范中的一部分，现在在Firefox 3.5、Safari 4和IE8中得到支持。\n缺点：低版本浏览器不支持。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);